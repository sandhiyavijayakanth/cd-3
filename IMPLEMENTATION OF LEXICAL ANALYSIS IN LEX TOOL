vi lex.l 
%{ 
int COMMENT=0; 
%} 
identifier [a-zA-Z][a-zA-Z0-9]* 
%% 
#.* { printf("\n%s is a PREPROCESSOR DIRECTIVE",yytext);} 
int | 
float | 
char | 
double | 
while | 
for | 
do | 
if | 
break |
continue | 
void | 
switch | 
case | 
long | 
struct | 
const | 
typedef | 
return | 
else | 
goto {printf("\n\t%s is a KEYWORD",yytext);} 
"/*" {COMMENT = 1;} 
"*/" {COMMENT = 0;} 
\)(\;)? {if(!COMMENT) printf("\n\t");ECHO;printf("\n");} 
\( ECHO; 
= {if(!COMMENT)printf("\n\t%s is an ASSIGNMENT OPERATOR",yytext);} 
\<= | 
\>= | 
\< | 
== | 
\> {if(!COMMENT) printf("\n\t%s is a RELATIONAL OPERATOR",yytext);} 
%% 
int main(int argc,char **argv) 
{ 
if (argc > 1) 
{ 
FILE *file; 
file = fopen(argv[1],"r"); 
if(!file) 
{ 
printf("could not open %s \n",argv[1]); 
exit(0); 
} 
yyin = file; 
} 
yylex(); 
printf("\n\n"); 
return 0; 
} int yywrap() 
{ 
return 0; 
} 
vi lex1.c: 
main() 
{ 
int a,b,c,i; 
a=10; 
b=20; 
c=a+b*10; 
if(a>b) 
printf("%d",a); 
else 
printf("%d",b); 
i=0; 
while(i<c) 
{ 
printf("%",i); 
i=i+100; 
} 
}
